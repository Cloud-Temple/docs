name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - dev
  create:
    tags:
      - "*"

env:
  name: dev  # Remplacez 'dev' par le nom de votre environnement

jobs:
  # Job pour la branche dev (déploiement GitHub Pages)
  deploy-dev:
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}
          ALGOLIA_CROWLER_ID: ${{ secrets.ALGOLIA_CROWLER_ID }}
        run: |
          echo ${{ secrets.ALGOLIA_INDEX_NAME }}
          echo ${{ secrets.ALGOLIA_CROWLER_ID }}
          npm run build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job pour la branche main (construction et push d'une image Docker non versionnée)
  build-main:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          dockerfile: ./docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: cloudtempleinfra/docs:main

  # Job pour les tags (construction et push d'une image Docker versionnée)
  build-tag:
    name: Build and Push Versioned Docker Image
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          dockerfile: ./docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            cloudtempleinfra/docs:${{ env.TAG }}
            cloudtempleinfra/docs:latest

      - name: Deploy Static Verification
        env:
          ALGOLIA_CROWLER_ID: ${{ secrets.ALGOLIA_CROWLER_ID }}
        run: |
          echo "Running deployment..."
          sed -i 's/\${ALGOLIA_CROWLER_ID}/'"$ALGOLIA_CROWLER_ID"'/g' static/verification.html
